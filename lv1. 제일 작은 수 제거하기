class Solution {
    public int[] solution(int[] arr) {
        
        if(arr.length <= 1){
            int[] answer = {-1};
            return answer;
        }
        int[] answer = new int[arr.length-1];
        
        int min = arr[0];
        
        for(int i = 0; i < arr.length; i++) {
            min = Math.min(min, arr[i]);
        }
        
        int index = 0;
        
        for(int i = 0; i < arr.length; i++) {
            if(arr[i] == min) {
                continue;
            }
            answer[index++] = arr[i];
        
        }
        return answer;
    }
}

// 복습
class Solution {
    public int[] solution(int[] arr) {
        int[] answer = new int[arr.length - 1];
        int min = arr[0];
        int minnum = 0;
        int arridx = 0;
        
        if (arr.length == 1)
        {
            answer = new int [1];
            answer[0] = -1;
            return answer;
        }
        
        for (int i = 0; i < arr.length; i++)
        {
            if (arr[i] < min)
            {
                min = arr[i];
                minnum = i;
            }
        }
        
        for (int i = 0; i < answer.length; i++)
        {
            if (i == minnum)
            {
                arridx++;
            }
            answer[i] = arr[arridx++];
        }

        return answer;
    }
}


// 다른 사람 풀이 Stream 사용

import java.util.Arrays;
import java.util.stream.Stream;
import java.util.List;
import java.util.ArrayList;

class Solution {
  public int[] solution(int[] arr) {
      if (arr.length <= 1) return new int[]{ -1 };
      int min = Arrays.stream(arr).min().getAsInt();
      return Arrays.stream(arr).filter(i -> i != min).toArray();
  }
}
